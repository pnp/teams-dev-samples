@using Microsoft.AspNetCore.Components.Forms
@using SharedModels.Models

<style>
    .sub-button{
        background-color: #1b6ec2;
        border: none;
        color: white;
        padding: 5px 5px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        border-radius: 5px;
        margin: 5px;
    }

    .sub-button:hover{
        background-color: #1b6ec2c7;
        border: none;
        color: white;
        padding: 5px 5px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        border-radius: 5px;
    }

    .can-button{
        background-color: #f44336;
        border: none;
        color: white;
        padding: 5px 5px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        border-radius: 5px;
        margin: 5px;
    }
    
    .can-button:hover{
        background-color: #f44336c7;
        border: none;
        color: white;
        padding: 5px 5px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        border-radius: 5px;
    }

    .button-line{
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
    }
</style>

<div>
    <EditForm Model="_form" OnValidSubmit="SubmitForm">
        <InputDate Type="InputDateType.DateTimeLocal"
                   @bind-Value="_form.date" />
        <div class="button-line">
            <button class="sub-button" type="submit">Submit</button>
        </div>
    </EditForm>
</div>

@code {
    public Form _form = new();

        [CascadingParameter] BlazoredModalInstance BlazoredAssessmentModal { get; set; } = default!;

        [Parameter] public DateTimeOffset oldDate { get; set; }

        protected override void OnInitialized()
        {
            _form.date = oldDate;
            BlazoredAssessmentModal.SetTitle("Enter New Date");
        }

        private async Task SubmitForm()
        {
            await BlazoredAssessmentModal.CloseAsync(ModalResult.Ok(_form.date));
        }

        private async Task Cancel() {
            await BlazoredAssessmentModal.CancelAsync();
            }

        public class Form{
            public DateTimeOffset? date { get; set; } = null;
        }

    }